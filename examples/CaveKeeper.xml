<?xml version="1.0" encoding="UTF-8"?>
<Scene base_name="CaveKeeper" name_space="Scene" name_suffix="0" persistency="666">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="1">
      <Object ambient="0.3 0.3 0.3 1" base_name="Headlight" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" photometricMap="" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowMapRes="2048" shadowVolume="1e+06 1e+06 1e+06 -1e+06 -1e+06 -1e+06 1" specular="0.1 0.1 0.1 1" type="Light" visible="1">
        <Object accept_root="1" aspect="1" at="0 0 -1" at_dir="1" base_name="Default" far="250" fov="1.0472" from="0 0 0" name_space="__global__" name_suffix="0" near="0.1" orthoSize="100" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="1">
          <attachments>
            <Node base_name="transform" name_space="VRAttachment" name_suffix="0" persistency="666" value=""/>
          </attachments>
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="Headlight" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="1">
            <attachments>
              <Node base_name="transform" name_space="VRAttachment" name_suffix="0" persistency="666" value=""/>
            </attachments>
            <constraint persistency="666"/>
          </Object>
          <constraint persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Cameras activeCam="Default" persistency="666"/>
  <Rendering deferred_rendering="0" fogColor="0.5 0.5 0.5 1" fogParams="0 0 100 0.1" frustum_culling="1" fxaa="0" hmdd="0" marker="0" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="dig" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	b = VR.CK.intersect(dev)
	VR.CK.remBlock(b)
</core>
      <trig type="on_device" dev="mouse" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="1" persistency="666"/>
    </Script>
    <Script base_name="init" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	VR.CK = VR.CaveKeeper("ck")
	VR.CK.init(root)
	
	root.find('Default').setIdentity()
	
	VR.light(dev)
</core>
      <arg type="VRPyDeviceType" value="mouse" base_name="dev" name_space="init" name_suffix="0" persistency="666"/>
      <arg type="VRPyObjectType" value="Headlight" base_name="root" name_space="init" name_suffix="0" persistency="666"/>
      <trig type="on_scene_load" dev="" state="pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="0" persistency="666"/>
    </Script>
    <Script base_name="light" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	if not hasattr(VR, 'lantern'):
		VR.lantern = VR.Geometry('lantern')
		VR.lmat = VR.Material('lantern')
		VR.getRoot().find('Headlight').addChild(VR.lantern)
		
	VR.lantern.setPrimitive('Box 0.1 0.1 0.1 1 1 1')
	VR.lantern.setMaterial(VR.lmat)
	VR.lantern.hide()
	VR.lmat.setLit(False)
	VR.lmat.setDiffuse(1,1,0.7)
	
	VR.CK.addObject(dev, "lantern", VR.lantern)
</core>
      <trig type="on_device" dev="mouse" state="Pressed" param="" key="2" base_name="trigger" name_space="__global__" name_suffix="2" persistency="666"/>
    </Script>
    <Script base_name="nav" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR

	kb = VR.find('keyboard')
	
	def isDown(k):
		return kb.getKeyState(ord(k))

	W = isDown('w')
	A = isDown('a')
	S = isDown('s')
	D = isDown('d')
	Q = isDown('q')
	E = isDown('e')
	
	if W: cam.move( 0.1)
	if S: cam.move(-0.1)
	if A: cam.rotate( 0.05, [0,1,0])
	if D: cam.rotate(-0.05, [0,1,0])
	if Q: cam.translate([0,-0.1,0])
	if E: cam.translate([0, 0.1,0])
		
</core>
      <arg type="VRPyTransformType" value="Default" base_name="cam" name_space="nav" name_suffix="0" persistency="666"/>
      <trig type="on_timeout" dev="keyboard" state="Pressed" param="0" key="-1" base_name="trigger" name_space="__global__" name_suffix="3" persistency="666"/>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666"/>
</Scene>
