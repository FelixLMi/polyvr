<?xml version="1.0" encoding="UTF-8"?>
<Scene base_name="Planet" name_space="Scene" name_suffix="0" persistency="666">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="1">
      <Object ambient="0.3 0.3 0.3 1" base_name="light" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" photometricMap="" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowMapRes="2048" shadowVolume="1e+06 1e+06 1e+06 -1e+06 -1e+06 -1e+06 1" specular="0.1 0.1 0.1 1" type="Light" visible="1">
        <Object accept_root="1" aspect="1" at="0 0 0" at_dir="0" base_name="Default" far="512" fov="1.0472" from="-1.22884 1.90302 0.446317" name_space="__global__" name_suffix="0" near="0.1" orthoSize="100" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="1">
          <attachments>
            <Node base_name="transform" name_space="VRAttachment" name_suffix="0" persistency="666" value=""/>
          </attachments>
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="light" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="1">
            <attachments>
              <Node base_name="transform" name_space="VRAttachment" name_suffix="0" persistency="666" value=""/>
            </attachments>
            <constraint persistency="666"/>
          </Object>
          <constraint persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Cameras activeCam="Default" persistency="666"/>
  <Rendering deferred_rendering="0" fogColor="0.5 0.5 0.5 1" fogParams="0 0 100 0.1" frustum_culling="1" fxaa="0" hmdd="0" marker="0" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="Script" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="GLSL">
      <core>
#version 400 compatibility
uniform sampler2D tex;

in vec3 tcs;
in vec3 normal;
in vec4 position;

const float pi = 3.1415926;

vec4 color;

/*void applyLightning() {
	vec3 n = normal;
	vec3  light = normalize( gl_LightSource[0].position.xyz - position.xyz ); // point light
	float NdotL = max(dot( n, light ), 0.0);
	vec4  ambient = gl_LightSource[0].ambient * color;
	vec4  diffuse = gl_LightSource[0].diffuse * NdotL * color;
	float NdotHV = max(dot(n, normalize(gl_LightSource[0].halfVector.xyz)),0.0);
	vec4  specular = gl_LightSource[0].specular * pow( NdotHV, gl_FrontMaterial.shininess );
	gl_FragColor = diffuse + specular;
	//gl_FragColor = ambient + diffuse + specular;
}*/

/*float atan2(float y, float x) {
    //return (abs(y) &lt;= 5e-2 &amp;&amp; x &lt; 0) ? sign(-x)*pi : ;
    //return mix(sign(-x)*pi, atan(y, x), clamp(abs(y),0,1));
    //return mix(atan(y, x), sign(-x)*pi, clamp(abs(y*0.1),0,1));
    return mix(sign(-x)*pi, atan(y, x), 1.0);
}*/

float atan2(float y, float x) {
    float d = float(abs(y) &gt; abs(x));
    return mix(pi*0.5 - atan(x,y), atan(y,x), d);
}

void main( void ) {
	float r = length(tcs);
	float u = 0.5 - atan(tcs.z, tcs.x)/pi*0.5;
	float v = 1.0 - acos( tcs.y / r )/pi;
	//if (abs(u) &lt; 0.1) u = 0;
	//if (abs(u) &gt;= 0.4) u = 0.5;
	//if (abs(u) &gt;= 0.49981) u = 0.5;
	color = texture2D(tex, vec2(u,v));
	//applyLightning(); // TODO
	gl_FragColor = color;
	//if (abs(u-0.5) &gt;= 0.4995) gl_FragColor = texture2D(tex, vec2(0,v));
	gl_FragColor = vec4(u,0,0,1);
}
</core>
    </Script>
    <Script base_name="init" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	if hasattr(VR, 'scene'): VR.scene.destroy()
	VR.scene = VR.Object('scene', 'light')
	
	
	planet = VR.Planet('myPlanet')
	planet.setParameters( 1, None, 0, 0.1 ) # planet radius
	VR.scene.addChild(planet)
	
	
	tg = VR.TextureGenerator()
	tg.setSize([400,400,1])
	tg.add('Perlin', 1.0, [0.97]*3, [1.0]*3)
	tg.add('Perlin', 1.0/2, [0.95]*3, [1.0]*3)
	tg.add('Perlin', 1.0/4, [0.85]*3, [1.0]*3)
	tg.add('Perlin', 1.0/8, [0.8]*3, [1.0]*3)
	tg.add('Perlin', 1.0/16, [0.7]*3, [1.0]*3)
	tg.add('Perlin', 1.0/32, [0.5]*3, [1.0]*3)
	
	
	pm = planet.getMaterial()
	#pm.setTexture( tg.compose(0) )
	pm.setTexture( 'Planet.png' )
	pm.setFragmentProgram('Script')
	
</core>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="0" persistency="666"/>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666"/>
</Scene>
